extends CharacterBody2D

@export var gravity: float = 1200.0
@export var jump_speed: float = 800.0
@export var bounce_angle: float = 75.0 # Unghiul de 75° pentru sărituri
@export var bounce_interval: float = 1.0  # Intervalul pentru a se întoarce

var bounce_timer: float = 0.0
var is_jumping: bool = false
@onready var ray_castright: RayCast2D = $RayCastright
@onready var ray_castrightleft: RayCast2D = $RayCastrightleft
@onready var ray_castup: RayCast2D = $RayCastup
@onready var ray_castdown: RayCast2D = $RayCastdown

func _ready():
	bounce_timer = bounce_interval
	ray_castrightleft.enabled = true
	ray_castright.enabled = true
	ray_castup.enabled = true
	ray_castdown.enabled = true

func _physics_process(delta):
	# Aplicăm gravitația pe Y
	velocity.y += gravity * delta
	
	# Menținem X-ul constant, adică mișcarea se face doar pe Y
	velocity.x = 0.0

	# Timer pentru salturi
	bounce_timer -= delta
	if bounce_timer <= 0.0 and is_on_floor() and !is_jumping:
		start_jump()

	# Dacă suntem în aer, sărim într-un unghi de 75° (calculăm componentele X și Y ale vitezei)
	if is_jumping:
		var angle_rad = deg_to_rad(bounce_angle)
		velocity.x = jump_speed * sin(angle_rad)  # Componenta pe X
		velocity.y = -jump_speed * cos(angle_rad)  # Componenta pe Y (săritura în sus)

	# Coliziune cu tavanul: inversăm direcția pe verticală când atingem tavanul
	if ray_castup.is_colliding():
		velocity.y = abs(velocity.y)  # Se inversează direcția pe Y când lovește tavanul
		bounce_timer = bounce_interval

	# Coliziune cu solul: inversăm direcția pe verticală când atingem solul
	if ray_castdown.is_colliding():
		velocity.y = -abs(velocity.y)  # Se inversează direcția pe Y când lovește solul
		bounce_timer = bounce_interval

	# Coliziune cu pereții stânga/dreapta
	if ray_castrightleft.is_colliding():
		velocity.x = abs(velocity.x)  # Inversează direcția pe X când lovește peretele stâng
		bounce_timer = bounce_interval

	if ray_castright.is_colliding():
		velocity.x = -abs(velocity.x)  # Inversează direcția pe X când lovește peretele drept
		bounce_timer = bounce_interval

	# Mișcare
	move_and_slide()  # Apelăm doar cu un singur argument, deoarece este un CharacterBody2D

# Pornirea saltului
func start_jump():
	is_jumping = true
	bounce_timer = bounce_interval
